name: "mycoco"
layer {
    name: "data"
    type: "ImageData"
    top: "data"
    top: "label"
    include {
        phase: TRAIN
    }
    transform_param {
        mirror: true
        crop_size: 227
        mean_file: "imagenet_mean.binaryproto"
    }
    image_data_param {
        source: "/work/school/16-824/assignment01/list/trainlist_class.txt"
        batch_size: 50
        new_height: 256
        new_width: 256
        root_folder: "/work/datasets/vlr/hw1/crop_imgs/"
        shuffle: true
    }
}
layer {
    name: "data"
    type: "ImageData"
    top: "data"
    top: "label"
    include {
        phase: TEST
    }
    transform_param {
        mirror: false
        crop_size: 227
        mean_file: "imagenet_mean.binaryproto"
    }
    image_data_param {
        source: "/work/school/16-824/assignment01/list/testlist_class.txt"
        batch_size: 50
        new_height: 256
        new_width: 256
        root_folder: "/work/datasets/vlr/hw1/crop_imgs/"
    }
}

layer {
    name: "conv1"
    type: "Convolution"
    bottom: "data"
    top: "conv1"
    param {
        lr_mult: 1
        decay_mult: 1
    }
    param {
        lr_mult: 2
        decay_mult: 0
    }
    convolution_param {
        num_output: 64
        kernel_size: 7
        stride: 4
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
}
layer {
    name: "bn1"
    type: "BatchNorm"
    bottom: "conv1"
    top: "bn1"
    param {
        lr_mult: 0
    }
}
layer {
    name: "relu1"
    type: "ReLU"
    bottom: "bn1"
    top: "relu1"
}
layer {
    name: "pool1"
    type: "Pooling"
    bottom: "relu1"
    top: "pool1"
    pooling_param {
        pool: MAX
        kernel_size: 3
        stride: 2
    }
}


layer {
    name: "conv2"
    type: "Convolution"
    bottom: "pool1"
    top: "conv2"
    param {
        lr_mult: 1
        decay_mult: 1
    }
    param {
        lr_mult: 2
        decay_mult: 0
    }
    convolution_param {
        num_output: 128
        kernel_size: 5
        stride: 2
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
}
layer {
    name: "bn2"
    type: "BatchNorm"
    bottom: "conv2"
    top: "bn2"
    param {
        lr_mult: 0
    }
    param {
        lr_mult: 0
    }
    param {
        lr_mult: 0
    }
}
layer {
    name: "relu2"
    type: "ReLU"
    bottom: "bn2"
    top: "relu2"
}


layer {
    name: "conv3"
    type: "Convolution"
    bottom: "relu2"
    top: "conv3"
    param {
        lr_mult: 1
        decay_mult: 1
    }
    param {
        lr_mult: 2
        decay_mult: 0
    }
    convolution_param {
        num_output: 256
        kernel_size: 3
        stride: 1
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
}
layer {
    name: "bn3"
    type: "BatchNorm"
    bottom: "conv3"
    top: "bn3"
    param {
        lr_mult: 0
    }
    param {
        lr_mult: 0
    }
    param {
        lr_mult: 0
    }
}
layer {
    name: "relu3"
    type: "ReLU"
    bottom: "bn3"
    top: "relu3"
}

layer {
    name: "conv4"
    type: "Convolution"
    bottom: "relu3"
    top: "conv4"
    param {
        lr_mult: 1
        decay_mult: 1
    }
    param {
        lr_mult: 2
        decay_mult: 0
    }
    convolution_param {
        num_output: 128
        kernel_size: 3
        stride: 1
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
}
layer {
    name: "bn4"
    type: "BatchNorm"
    bottom: "conv4"
    top: "bn4"
    param {
        lr_mult: 0
    }
    param {
        lr_mult: 0
    }
    param {
        lr_mult: 0
    }
}
layer {
    name: "relu4"
    type: "ReLU"
    bottom: "bn4"
    top: "relu4"
}
layer {
    name: "pool4"
    type: "Pooling"
    bottom: "relu4"
    top: "pool4"
    pooling_param {
        pool: MAX
        kernel_size: 3
        stride: 2
    }
}

layer {
    name: "fc5"
    type: "InnerProduct"
    bottom: "pool4"
    top: "fc5"
    param {
        lr_mult: 1
        decay_mult: 1
    }
    param {
        lr_mult: 2
        decay_mult: 0
    }
    inner_product_param {
        num_output: 1024
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
}
layer {
    name: "bn5"
    type: "BatchNorm"
    bottom: "fc5"
    top: "bn5"
    param {
        lr_mult: 0
    }
    param {
        lr_mult: 0
    }
    param {
        lr_mult: 0
    }
}
layer {
    name: "relu5"
    type: "ReLU"
    bottom: "bn5"
    top: "relu5"
}

layer {
    name: "fc6"
    type: "InnerProduct"
    bottom: "relu5"
    top: "fc6"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 2
        decay_mult: 0
    }
    inner_product_param {
        num_output: 30
        weight_filler {
            type: "gaussian"
            std: 0.01
        }
        bias_filler {
            type: "constant"
            value: 0
        }
    }
}


layer {
    name: "accuracy"
    type: "Accuracy"
    bottom: "fc6"
    bottom: "label"
    top: "accuracy"
    include {
        phase: TEST
    }
}
layer {
    name: "loss"
    type: "SoftmaxWithLoss"
    bottom: "fc6"
    bottom: "label"
    top: "loss"
}
